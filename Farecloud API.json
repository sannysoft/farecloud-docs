{
  "openapi": "3.0.0",
  "info": {
    "title": "Farecloud API",
    "description": "API lets you search and book flight tickets",
    "contact": {
      "url": "https://farecloud.io/",
      "email": "support@farecloud.io"
    },
    "version": "1"
  },
  "servers": [
    {
      "url": "https://api.farecloud.io/"
    }
  ],
  "paths": {
    "/search": {
      "get": {
        "summary": "search",
        "description": "The result will contain number of bookable variants each consisting of price, signature and array of flights",
        "operationId": "Search",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Origin IATA-code",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Destination IATA-code.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date1",
            "in": "query",
            "description": "Date of departure. Format is yyyy-mm-dd (For example 2019-02-02)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date2",
            "in": "query",
            "description": "Date of return flight (for round trip flights). Format is yyyy-mm-dd (ex 2019-02-02)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adults",
            "in": "query",
            "description": "Number of adults flying. Minimum  is 1",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "children",
            "in": "query",
            "description": "Number of children flying. Dedault value is 0",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "infants",
            "in": "query",
            "description": "Number of infants flying. Should be less or equal to number of adults. Default value is 0",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of results (default is 300)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search response containing bookable flight options (variants)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse",
                  "description": "Search response containing bookable flight options (variants)"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/validate": {
      "get": {
        "summary": "validate",
        "description": "Validate price & availability",
        "operationId": "Validate",
        "parameters": [
          {
            "name": "signature",
            "in": "query",
            "description": "Signature of the variant you are checking price for",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adults",
            "in": "query",
            "description": "Number of adults",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "infants",
            "in": "query",
            "description": "Number of infants. Default: 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "children",
            "in": "query",
            "description": "Number of children. Default: 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Validation response contains result of price and availability check",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateResponse",
                  "description": "Validation response contains result of price and availability check"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/book": {
      "post": {
        "summary": "book",
        "description": "Book tickets",
        "operationId": "Book",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Booking response containing status of the booking and farecloud id if succesfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse",
                  "description": "Booking response containing status of the booking and farecloud id if succesfull"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/issue": {
      "get": {
        "summary": "Issue tickets",
        "operationId": "IssueTickets",
        "parameters": [
          {
            "name": "bookingId",
            "in": "query",
            "description": "Farecloud booking id returned from the booking stage. This is the id of the booking you want to issue",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expectedPrice",
            "in": "query",
            "description": "Same as in booking request. Amount of money in base currency you expect to pay for the tickets. expectedPrice should consist of ticket price + luggage price (if any). We recommend to add 0.5% of price on top to pass price check in case of any currency rates change. If expectedPrice param is less than real price the booking process will fail and error is returned",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Money": {
        "title": "Money",
        "description": "Money type represents some amount of money",
        "type": "object",
        "properties": {
          "currency": {
            "description": "Currency 3-char code according to ISO, ex. EUR",
            "type": "string"
          },
          "amount": {
            "description": "Amount represents value of the monetary object. It is floating point number.",
            "type": "number"
          }
        }
      },
      "Flight": {
        "title": "Flight",
        "type": "object",
        "properties": {
          "marketingCarrier": {
            "description": "Represents IATA-code of the airline that sells the ticket unders it's name\nExamples: SU, DD, FD",
            "type": "string"
          },
          "operatingCarrier": {
            "description": "Represents IATA-code of the airline that owns the plane and operates the flight\nExamples: SU, DD, FD",
            "type": "string"
          },
          "departureDateTime": {
            "description": "Date and time in YYYY-MM-DD hh:mm format\nRepresents local (not UTC) time of departure/arrival\nExample: 2019-02-10 10:30",
            "type": "string"
          },
          "arrivalDateTime": {
            "description": "Date and time in YYYY-MM-DD hh:mm format\nRepresents local (not UTC) time of departure/arrival\nExample: 2019-02-10 10:30",
            "type": "string"
          },
          "cabin": {
            "$ref": "#/components/schemas/CabinClass",
            "description": "Y - Economy class. C - Business class."
          },
          "plane": {
            "description": "Aircrafrt iata-code\nBlank if unknown\nExample: 320 for Airbus 320",
            "type": "string"
          },
          "arrivalTerminal": {
            "description": "Digit or char representing destination airport terminal\nBlank if airport has single terminal or if not specified",
            "type": "string"
          },
          "departureTerminal": {
            "description": "Digit or char representing origin airport terminal\nBlank if airport has single terminal or if not specified",
            "type": "string"
          },
          "number": {
            "description": "Digital part of flight number\nExample: 3202\nFull flight number consists of marketing carrier + flight number",
            "type": "string"
          },
          "from": {
            "description": "IATA-code of origin airport\nExample: SVO, BKK, HKT",
            "type": "string"
          },
          "to": {
            "description": "IATA-code of destination airport\nExample: SVO, BKK, HKT",
            "type": "string"
          },
          "bookingClass": {
            "description": "Booking class or tariff name\nEmpty if unknown/not specified",
            "type": "string"
          },
          "segmentIndex": {
            "$ref": "#/components/schemas/IndexOfSegment",
            "description": "0 for flights from origin to destination\n1 for return flights"
          },
          "includedLuggage": {
            "description": "Luggage allowance in kg splitted by bags\nFormat: (max bag weight in kg)+(max bag weight in kg)\nExamples: \n\"\" or \"0\" for no luggage\n\"20\" for 20kg single bag\n\"25+25\" for 2 bags not more than 25 kg each",
            "type": "string"
          },
          "handLuggage": {
            "$ref": "#/components/schemas/HandLuggage",
            "description": "Represents hand luggage free allowance"
          }
        }
      },
      "Variant": {
        "title": "Variant",
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/Money",
            "description": "Money type represents some amount of money"
          },
          "signature": {
            "description": "Signature identifies combination of flights and is used for further steps like validation and booking",
            "type": "string"
          },
          "flights": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flight"
            }
          }
        }
      },
      "BookingRequest": {
        "title": "Booking request",
        "required": [
          "email",
          "expectedPrice",
          "passengers",
          "luggageCode",
          "phone",
          "signature"
        ],
        "type": "object",
        "properties": {
          "email": {
            "description": "This email address will be used to send time change/cancellation emails from the airline",
            "type": "string"
          },
          "phone": {
            "description": "Required format: +(country phone code) (area code) (full number)\nExample: +79151234567",
            "type": "string"
          },
          "ipAddress": {
            "description": "We recommend to pass real customer ip address here\nIn case it's not available - you can use 1.1.1.1",
            "type": "string"
          },
          "userAgent": {
            "description": "We recommend to pass real customer real user agent. You can pass empty string if the information is not available.",
            "type": "string"
          },
          "requestOrigin": {
            "description": "Should contain the website domain / company name and locale used to book tickets \nExample: bestflights_com-en or bestplanes-de",
            "type": "string"
          },
          "signature": {
            "description": "Signature representing the flights (received from the validation step)",
            "type": "string"
          },
          "passengers": {
            "description": "List of passengers details\nPassengers count should be the same as in the validation request",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PassengerDetails"
            }
          },
          "luggageCode": {
            "description": "Should be empty string if no extra luggage is selected\nExample: 20",
            "type": "string"
          },
          "localId": {
            "description": "Optional parameter\nIt's used to easier find bookings in Farecloud hub and to easier match bookings with Farecloud",
            "type": "string"
          },
          "expectedPrice": {
            "description": "expectedPrice should consist of ticket price + luggage price (if any)\nWe recommend to add 0.5% of price on top to pass price check in case of any currency rates change.\nIf expectedPrice param is less than real price the booking process will fail and error is returned",
            "type": "number"
          },
          "issue": {
            "description": "We recommend to set this flag to true for all bookings\nAt the moment Farecloud doesn't allow holding seats with book method so there is not many reasons to call issue separately instead of setting flag",
            "type": "boolean"
          }
        }
      },
      "PassengerDetails": {
        "title": "Passenger details",
        "description": "This object contains details of a particular passenger",
        "required": [
          "firstName",
          "gender",
          "lastName",
          "nationality",
          "dateOfBirth"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "description": "May contain multiple words or complex names like \"MARIA-ELENA\"\nExample: Alexander",
            "type": "string"
          },
          "lastName": {
            "description": "May conain compex last names\nExample: Gates",
            "type": "string"
          },
          "gender": {
            "description": "One of \"M\" or \"F\".\nM for Male.\nF for Female.",
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date",
            "description": "Format: YYYY-MM-DD. Example: 1980-02-25",
            "type": "string"
          },
          "nationality": {
            "description": "Country code according to ISO 3166-1 alpha-2\nExample: US or FR",
            "type": "string"
          },
          "passportNumber": {
            "description": "Passport/id card/other permitted document number that customer should carry when flying. \nThis field is required if passportRequired is true at the validation stage",
            "type": "string"
          },
          "passportExpirationDate": {
            "description": "Passport/id card/other permitted document expiration date that customer should carry when flying. If the document doesn't have expiration date it can in rare cases be ommited.\nThe date should be after the last flight date.\nThis field is required if passportRequired is true at the validation stage\nFormat: YYYY-MM-DD\nExample: 2020-05-25",
            "type": "string"
          }
        }
      },
      "CabinClass": {
        "title": "Cabin class",
        "description": "Y - Economy class. \nC - Business class",
        "enum": [
          "Y",
          "C"
        ],
        "type": "string",
        "example": "Y",
        "x-enum-elements": [
          {
            "name": "Y",
            "description": ""
          },
          {
            "name": "C",
            "description": ""
          }
        ]
      },
      "IndexOfSegment": {
        "title": "Index of segment",
        "description": "0 for flights flying from origin to destination. \n1 for return flights.",
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "example": 0,
        "x-enum-elements": [
          {
            "name": "Enum_0",
            "description": ""
          },
          {
            "name": "Enum_1",
            "description": ""
          }
        ]
      },
      "SearchResponse": {
        "title": "Search response",
        "description": "It consists of 2 values - status, recommendations",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RequestStatus",
            "description": "It should be \"ok\" for proper succesfull search request\nIf it's not - the result should also contain text \"message\" field with details"
          },
          "variants": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant"
            }
          }
        }
      },
      "RequestStatus": {
        "title": "Request status",
        "description": "It should be \"ok\" for proper succesfull search request\nIf it's not - the result should also contain text \"message\" field with details",
        "enum": [
          "ok",
          "error"
        ],
        "type": "string",
        "example": "ok",
        "x-enum-elements": [
          {
            "name": "ok",
            "description": ""
          },
          {
            "name": "error",
            "description": ""
          }
        ]
      },
      "ValidateResponse": {
        "title": "validateResponse",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ValidationStatus",
            "description": "Should be \"available\" if validation was successfull\nUnavailable if can't be booked at the moment (no seats etc)\nError in all other situations"
          },
          "signature": {
            "description": "Used to proceed with booking",
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Money",
            "description": "Money type represents some amount of money"
          },
          "flights": {
            "description": "",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flight"
            }
          },
          "passportRequired": {
            "description": "Shows if passport details (number and expiration date) is required to book tickets",
            "type": "boolean"
          },
          "passengers": {
            "$ref": "#/components/schemas/PassengerCount"
          },
          "fareRules": {
            "type": "string"
          },
          "luggageOptions": {
            "type": "object"
          },
          "rid": {
            "description": "Used for debugging purposes only",
            "type": "string"
          }
        }
      },
      "ValidationStatus": {
        "title": "Validation status",
        "description": "Should be \"available\" if validation was successfull.\n\"unavailable\" if can't be booked at the moment (no seats etc).\n\"error\" in all other situations.",
        "enum": [
          "available",
          "unavailable",
          "error"
        ],
        "type": "string",
        "example": "available",
        "x-enum-elements": [
          {
            "name": "available",
            "description": ""
          },
          {
            "name": "unavailable",
            "description": ""
          },
          {
            "name": "error",
            "description": ""
          }
        ]
      },
      "ProcessStatus": {
        "title": "Process status",
        "description": "Might be \"booked\" or \"error\"\nResponse will contain message field in case of error or id in case of success",
        "enum": [
          "error",
          "booked"
        ],
        "type": "string",
        "example": "error",
        "x-enum-elements": [
          {
            "name": "error",
            "description": ""
          },
          {
            "name": "booked",
            "description": ""
          }
        ]
      },
      "LuggageOption": {
        "title": "Represents paid luggage option with it's allowance and price",
        "type": "object",
        "properties": {
          "code": {
            "description": "Luggage allowance in kg splitted by bags\nFormat: (max bag weight in kg)+(max bag weight in kg)\nExamples: \n\"\" or \"0\" for no luggage\n\"20\" for 20kg single bag\n\"25+25\" for 2 bags not more than 25 kg each",
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Money",
            "description": "Money type represents some amount of money"
          }
        }
      },
      "PassengerCount": {
        "title": "Passengers count used for validation",
        "type": "object",
        "properties": {
          "adults": {
            "description": "Number of adults.",
            "type": "integer"
          },
          "children": {
            "description": "Number of children.",
            "type": "integer"
          },
          "infants": {
            "description": "Number of infants.",
            "type": "integer"
          }
        }
      },
      "HandLuggage": {
        "title": "Hand luggage free allowance",
        "description": "Represents hand luggage free allowance",
        "type": "object",
        "properties": {
          "dimensions": {
            "description": "Important: This information is taked from Farecloud database and may not be 100% correct all the time. We recommend to use other sources of the information to determine included hand luggage\nMaximum dimensions of the luggage piece in cm\nFormat: (width)x(height)x(depth)",
            "type": "string"
          },
          "weight": {
            "description": "Maximum weight in kilograms",
            "type": "integer"
          }
        }
      },
      "BookingResponse": {
        "title": "Booking result",
        "type": "object",
        "properties": {
          "rid": {
            "description": "Unique request id",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProcessStatus",
            "description": "Might be \"booked\" or \"error\". \nResponse will contain message field in case of error or id in case of success"
          },
          "bookingId": {
            "description": "Unique farecloud booking id - save it for future use",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "httpBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "httpBasic": []
    }
  ]
}